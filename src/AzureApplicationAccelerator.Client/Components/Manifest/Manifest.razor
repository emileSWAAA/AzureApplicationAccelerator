@using System.Text.Json
@using AzureApplicationAccelerator.Elements.Converters
@using System.Text.Json.Serialization
@inject UIDefinitionService DefinitionService

<StandaloneCodeEditor Id="defintion-manifest"
                      ConstructionOptions="EditorConstructionOptions"
                      CssClass="manifest-editor"
                      @ref="@standaloneCodeEditor" />

<style>
    .manifest-editor {
        height: 100%;
    }
</style>

@code {
    private StandaloneCodeEditor standaloneCodeEditor = new StandaloneCodeEditor();
    private StandaloneEditorConstructionOptions constructionOptions = new StandaloneEditorConstructionOptions
    {
        AutomaticLayout = true,
        Language = "json",
        ReadOnly = true
    };

    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "json",
            Value = DefinitionJson,
            ReadOnly = true
        };
    }

    public string DefinitionJson { get; set; }

    protected override void OnInitialized()
    {
        UpdateDefinitionJson();
        DefinitionService.OnChange += HandleDefinitionManagerChange;
    }

    private void HandleDefinitionManagerChange()
    {
        UpdateDefinitionJson();
        StateHasChanged();
    }

    private void UpdateDefinitionJson()
    {
        DefinitionJson = JsonSerializer.Serialize(DefinitionService.Definition, new JsonSerializerOptions
        {
            WriteIndented = true,
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            DefaultIgnoreCondition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingNull,
            Converters = { new UIElementJsonConverter(), new JsonStringEnumConverter(JsonNamingPolicy.CamelCase) }
        });

        standaloneCodeEditor?.SetValue(DefinitionJson);
    }

    public void Dispose()
    {
        DefinitionService.OnChange -= HandleDefinitionManagerChange;
    }
}
