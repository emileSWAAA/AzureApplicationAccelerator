@using Microsoft.Extensions.Hosting
@inherits LayoutComponentBase
@inject UIDefinitionService DefinitionService
@inject Microsoft.Extensions.Hosting.IHostEnvironment HostEnvironment

<FluentToastProvider />
<FluentDialogProvider />
<FluentTooltipProvider />
<FluentMessageBarProvider />
<FluentMenuProvider />

<FluentLayout>
    <FluentHeader>
        Azure Application Accelerator
        @if (HostEnvironment.IsDevelopment())
        {
            <FluentSpacer />
            <div style="color: red; font-weight: bold;">
                Development Mode.
            </div>
            <FluentSpacer />
            <FluentButton OnClick="@DefinitionService.ClearAsync" Appearance="Appearance.Accent">Clear definition</FluentButton>
        }
        <FluentSpacer />
        <FluentAnchor Href="https://github.com/emileSWAAA/AzureApplicationAccelerator" Target="_blank" Appearance="Appearance.Stealth">
            <FluentIcon Value="@(Icon.FromImageUrl("github.svg"))" Width="24px" />
        </FluentAnchor>
    </FluentHeader>

    <FluentBodyContent>
        @if (_initialized)
        {
            @Body
        }
        else
        {
            <div>Loading...</div>
        }
    </FluentBodyContent>

</FluentLayout>

@code {

    private bool _initialized;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_initialized)
        {
            _initialized = true;
            await DefinitionService.InitializeAsync();
            DefinitionService.OnChange += StateHasChanged;
            StateHasChanged();
        }
    }

}